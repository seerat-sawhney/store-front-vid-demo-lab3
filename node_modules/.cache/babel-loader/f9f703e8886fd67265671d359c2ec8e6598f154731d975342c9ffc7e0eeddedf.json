{"ast":null,"code":"export default {\n  data() {\n    return {\n      products: [],\n      selectedProduct: null,\n      quantity: 1 // Initialize quantity with a default value of 1\n    };\n  },\n  async created() {\n    await this.fetchProducts();\n  },\n  computed: {\n    totalPrice() {\n      return this.selectedProduct ? this.selectedProduct.price * this.quantity : 0;\n    }\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await fetch(`${process.env.VUE_APP_PRODUCT_SERVICE_URL}/products`);\n        if (response.ok) {\n          this.products = await response.json();\n        } else {\n          alert('Failed to fetch products.');\n        }\n      } catch (error) {\n        console.error('Error fetching products:', error);\n        alert('Failed to fetch products.');\n      }\n    },\n    async submitOrder() {\n      if (!this.selectedProduct || this.quantity <= 0) {\n        alert('Please select a product and enter a valid quantity.');\n        return;\n      }\n      try {\n        const response = await fetch(`${process.env.VUE_APP_ORDER_SERVICE_URL}/orders`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            product: this.selectedProduct,\n            quantity: this.quantity,\n            totalPrice: this.totalPrice // Send the total price as well\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Server error: ${response.status}`);\n        }\n        alert(`Order for ${this.quantity} x ${this.selectedProduct.name} placed successfully! Total: $${this.totalPrice.toFixed(2)}`);\n      } catch (error) {\n        console.error('Error placing order:', error);\n        alert('Failed to place order.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","products","selectedProduct","quantity","created","fetchProducts","computed","totalPrice","price","methods","response","fetch","process","env","VUE_APP_PRODUCT_SERVICE_URL","ok","json","alert","error","console","submitOrder","VUE_APP_ORDER_SERVICE_URL","method","headers","body","JSON","stringify","product","Error","status","name","toFixed"],"sources":["/Users/seeratsawhney/Desktop/lab3/store-front-vid-demo/src/components/OrderForm.vue"],"sourcesContent":["<template>\n  <div class=\"store-container\">\n    <!-- Header with store name and tagline -->\n    <header class=\"store-header\">\n      <h1>Algonquin Pet Store</h1>\n      <p class=\"tagline\">Meals for Pets, Lessons for Students!</p>\n    </header>\n\n    <!-- Animal images in the header -->\n    <div class=\"animal-images\">\n      <img src=\"pictures/dog.jpg\" alt=\"Dog\" />\n      <img src=\"pictures/cat.jpg\" alt=\"Cat\" />\n      <img src=\"pictures/bird.jpg\" alt=\"Bird\" />\n    </div>\n\n    <!-- Product selection and ordering process -->\n    <div v-if=\"products.length\">\n      <h2>Select a Product</h2>\n\n      <!-- Display products in a list with name and price -->\n      <div v-for=\"product in products\" :key=\"product.id\" class=\"product-item\">\n        <input\n          type=\"radio\"\n          :id=\"product.id\"\n          v-model=\"selectedProduct\"\n          :value=\"product\"\n        />\n        <label :for=\"product.id\">\n          <strong>{{ product.name }}</strong> - ${{ product.price ? product.price.toFixed(2) : 'N/A' }}\n        </label>\n      </div>\n\n      <!-- Quantity input field -->\n      <div v-if=\"selectedProduct\" class=\"quantity-container\">\n        <label for=\"quantity\">Quantity:</label>\n        <input type=\"number\" v-model=\"quantity\" min=\"1\" placeholder=\"Enter quantity\" />\n      </div>\n\n      <!-- Total Price Display -->\n      <div v-if=\"selectedProduct\" class=\"total-price\">\n        <h3>Total Price: ${{ totalPrice.toFixed(2) }}</h3>\n      </div>\n\n      <button @click=\"submitOrder\" :disabled=\"!selectedProduct || quantity <= 0\" class=\"order-button\">Place Order</button>\n    </div>\n\n    <!-- Loading message if no products are fetched yet -->\n    <div v-else>\n      <p>Loading products...</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      products: [],\n      selectedProduct: null,\n      quantity: 1,  // Initialize quantity with a default value of 1\n    };\n  },\n  async created() {\n    await this.fetchProducts();\n  },\n  computed: {\n    totalPrice() {\n      return this.selectedProduct ? this.selectedProduct.price * this.quantity : 0;\n    }\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await fetch(`${process.env.VUE_APP_PRODUCT_SERVICE_URL}/products`);        \n        if (response.ok) {\n          this.products = await response.json();\n        } else {\n          alert('Failed to fetch products.');\n        }\n      } catch (error) {\n        console.error('Error fetching products:', error);\n        alert('Failed to fetch products.');\n      }\n    },\n    async submitOrder() {\n      if (!this.selectedProduct || this.quantity <= 0) {\n        alert('Please select a product and enter a valid quantity.');\n        return;\n      }\n\n      try {\n        const response = await fetch(`${process.env.VUE_APP_ORDER_SERVICE_URL}/orders`, {          \n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            product: this.selectedProduct,\n            quantity: this.quantity,\n            totalPrice: this.totalPrice,  // Send the total price as well\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error(`Server error: ${response.status}`);\n        }\n\n        alert(`Order for ${this.quantity} x ${this.selectedProduct.name} placed successfully! Total: $${this.totalPrice.toFixed(2)}`);\n      } catch (error) {\n        console.error('Error placing order:', error);\n        alert('Failed to place order.');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n\n/* Container for the store */\n.store-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: rgba(255, 255, 255, 0.9); /* Make the container semi-transparent */\n  border-radius: 10px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n}\n\n/* Header for store name and tagline */\n.store-header {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.store-header h1 {\n  font-size: 2.5rem;\n  color: #42b983;\n  margin: 0;\n}\n\n.store-header .tagline {\n  font-size: 1.2rem;\n  color: #777;\n  margin-top: 10px;\n  font-style: italic;\n}\n\n/* Header animal images */\n.animal-images {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 20px;\n}\n\n.animal-images img {\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n  object-fit: cover;\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\n}\n\nh2, h3 {\n  text-align: center;\n  color: #42b983;\n}\n\n.product-item {\n  display: flex;\n  align-items: center;\n  margin: 10px 0;\n  padding: 10px;\n  border: 2px solid #42b983;\n  border-radius: 10px;\n  background-color: #e3f2fd;\n}\n\n.product-item label {\n  margin-left: 10px;\n  font-size: 1.1rem;\n}\n\n/* Styling the quantity input field */\n.quantity-container {\n  margin-top: 15px;\n  display: flex;\n  align-items: center;\n}\n\n.quantity-container label {\n  margin-right: 10px;\n}\n\ninput[type=\"number\"] {\n  padding: 8px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n}\n\n/* Total price display */\n.total-price {\n  margin-top: 20px;\n  text-align: center;\n  font-size: 1.3rem;\n  font-weight: bold;\n  color: #ff6f00;\n}\n\n/* Place Order button */\n.order-button {\n  margin-top: 20px;\n  padding: 10px 20px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n  font-size: 1.1rem;\n  transition: background-color 0.3s ease;\n}\n\n.order-button:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\n.order-button:hover:enabled {\n  background-color: #2e7d32;\n}\n</style>\n"],"mappings":"AAsDA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,IAAI;MACrBC,QAAQ,EAAE,CAAC,CAAG;IAChB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,aAAa,CAAC,CAAC;EAC5B,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACL,eAAc,GAAI,IAAI,CAACA,eAAe,CAACM,KAAI,GAAI,IAAI,CAACL,QAAO,GAAI,CAAC;IAC9E;EACF,CAAC;EACDM,OAAO,EAAE;IACP,MAAMJ,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B,WAAW,CAAC;QACnF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;UACf,IAAI,CAACd,QAAO,GAAI,MAAMS,QAAQ,CAACM,IAAI,CAAC,CAAC;QACvC,OAAO;UACLC,KAAK,CAAC,2BAA2B,CAAC;QACpC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDD,KAAK,CAAC,2BAA2B,CAAC;MACpC;IACF,CAAC;IACD,MAAMG,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAAClB,eAAc,IAAK,IAAI,CAACC,QAAO,IAAK,CAAC,EAAE;QAC/Cc,KAAK,CAAC,qDAAqD,CAAC;QAC5D;MACF;MAEA,IAAI;QACF,MAAMP,QAAO,GAAI,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACQ,yBAAyB,SAAS,EAAE;UAC9EC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,OAAO,EAAE,IAAI,CAACzB,eAAe;YAC7BC,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBI,UAAU,EAAE,IAAI,CAACA,UAAU,CAAG;UAChC,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACG,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIa,KAAK,CAAC,iBAAiBlB,QAAQ,CAACmB,MAAM,EAAE,CAAC;QACrD;QAEAZ,KAAK,CAAC,aAAa,IAAI,CAACd,QAAQ,MAAM,IAAI,CAACD,eAAe,CAAC4B,IAAI,iCAAiC,IAAI,CAACvB,UAAU,CAACwB,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;MAC/H,EAAE,OAAOb,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CD,KAAK,CAAC,wBAAwB,CAAC;MACjC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}